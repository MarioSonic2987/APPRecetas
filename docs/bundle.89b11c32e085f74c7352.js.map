{"version":3,"sources":["webpack://api_recetas/./src/js/http-provider.js","webpack://api_recetas/./src/js/renderizar-html.js","webpack://api_recetas/./src/js/paginacion.js","webpack://api_recetas/./src/index.js"],"names":["main","document","querySelector","resultadosBusqueda","getElementById","input","paginacionHTML","pagina","numeroPaginas","paginacion","async","paginaActual","from","to","datosApi","parametro","resp","fetch","ok","console","log","json","error","conexionAPI","value","Math","ceil","count","recetas","classList","remove","resultadosDibujados","forEach","receta","recipe","label","url","floor","calories","dietLabels","length","innerHTML","renderizarHTML","hits","btnPrev","btnNext","btnInicio","btnFin","totalPaginas","addEventListener","evento","preventDefault","disabled"],"mappings":"mBACA,MCAMA,EAAOC,SAASC,cAAc,QAC9BC,EAAqBF,SAASG,eAAe,sBCG7CC,EAAQJ,SAASG,eAAe,SAChCE,EAAiBL,SAASG,eAAe,cACzCG,EAASN,SAASG,eAAe,UAGvC,IAAII,EACJ,MAKaC,EAAaC,MAAOC,IAC7B,GAAIA,EAAe,GAAKA,EAAeH,EACnC,OAEJ,IAAII,EATmB,GASXD,EATW,GAUnBE,EAAKD,EAVc,GAWvB,MAAME,OFdiBJ,OAAOK,EAAWH,EAAMC,KAE/C,IACI,MAAMG,QAAaC,MAAM,mCAASF,mEAAsDH,QAAWC,KAOnG,OANKG,EAAKE,IACNC,QAAQC,IAAI,2CAGIJ,EAAKK,OAG3B,MAAOC,GACL,MAAM,IEEaC,CAAYlB,EAAMmB,MAAOZ,EAAMC,GAQtD,OAPAL,EAAgBiB,KAAKC,KAAKZ,EAASa,MAZZ,IActBnB,EAAgB,KAAOA,EAAgB,IDpBd,CAACoB,IAC3B5B,EAAK6B,UAAUC,OAAO,WACtB,IAAIC,EAAsB,GAC1BH,EAAQI,SAASC,IACbF,GAAuB,oEACiBE,EAAOC,OAAY,MAAKD,EAAOC,OAAY,MAAI,4IAEjDD,EAAOC,OAAOC,gEACTF,EAAOC,OAAOE,8KAEQH,EAAOC,OAAe,SAAKT,KAAKY,MAAMJ,EAAOC,OAAOI,UAAa,iGACnEL,EAAOC,OAAOK,WAAWC,OAAS,EAAMP,EAAOC,OAAiB,WAAI,0FAC5ED,EAAOC,OAAe,SAAKD,EAAOC,OAAe,SAAI,sEAGhH/B,EAAmBsC,UAAYV,GCM/BW,CAAe5B,EAAS6B,MACxBrC,EAAeuB,UAAUC,OAAO,UAChCvB,EAAOkC,UAAY,WAAW9B,QAAmBH,IAE1CA,GCvBL,EAAOP,SAASC,cAAc,QAC9B0C,EAAU3C,SAASG,eAAe,YAClCyC,EAAU5C,SAASG,eAAe,YAClC0C,EAAY7C,SAASG,eAAe,cACpC2C,EAAS9C,SAASG,eAAe,WAGvC,IACI4C,EADArC,EAAe,EAKnB,EAAKsC,iBAAiB,UAAUvC,MAAOwC,IACnCA,EAAOC,iBACPH,QAAqBvC,EAAWE,MAEpCkC,EAAQI,iBAAiB,SAAS,KAE9BJ,EAAQO,UAAW,EAEnBzC,IACAF,EAAWE,GACXkC,EAAQO,UAAW,KAGvBR,EAAQK,iBAAiB,SAAS,KAE9BL,EAAQQ,UAAW,EAEnBzC,IACAF,EAAWE,GACXiC,EAAQQ,UAAW,KAEvBN,EAAUG,iBAAiB,SAAS,KAChCH,EAAUM,UAAW,EACrBzC,EAAe,EACfF,EAAWE,GACXmC,EAAUM,UAAW,KAEzBL,EAAOE,iBAAiB,SAAS,KAC7BF,EAAOK,UAAW,EAClBzC,EAAeqC,EACfvC,EAAWE,GACXoC,EAAOK,UAAW,M","file":"bundle.89b11c32e085f74c7352.js","sourcesContent":["//Datos conexión a la API\r\nconst APP_ID = '7a328566';\r\nconst APP_key = '64edbabeddb76780a2625fea7e1e7c34';\r\nconst API = 'https://api.edamam.com/search?q='\r\n\r\n\r\n\r\n//Conexión a la API\r\nexport const conexionAPI = async (parametro, from, to) => {\r\n\r\n    try {\r\n        const resp = await fetch(`${API}${parametro}&app_id=${APP_ID}&app_key=${APP_key}&from=${from}&to=${to}`);\r\n        if (!resp.ok) {\r\n            console.log('Ha habido un fallo en la conexión');\r\n        }\r\n        //const { hits: recetas } = await resp.json( );\r\n        const datos = await resp.json();\r\n        //return recetas;   \r\n        return datos;\r\n    } catch (error) {\r\n        throw (error)\r\n    }\r\n}","//Seleccionamos elementos del HTML\r\nconst main = document.querySelector('main');\r\nconst resultadosBusqueda = document.getElementById('resultado-busqueda');\r\n\r\n\r\nexport const renderizarHTML = (recetas) => {\r\n    main.classList.remove('inicial');\r\n    let resultadosDibujados = [];\r\n    recetas.forEach((receta) => {\r\n        resultadosDibujados += `<div class=\"item\">\r\n                                    <img src=${(receta.recipe.image) ? (receta.recipe.image) : ('./img/Error.jpg')} alt=\"\">\r\n                                    <div class=\"flex-container\">\r\n                                        <h2>${receta.recipe.label}</h2>\r\n                                        <a href=\"${receta.recipe.url}\" target=\"_blanck\" class=\"btn-receta\">Ver receta</a>\r\n                                    </div>\r\n                                    <p class=\"datos-receta\">Calorias: ${(receta.recipe.calories) ? (Math.floor(receta.recipe.calories)) : ('No hay información')}</p>\r\n                                    <p class=\"datos-receta\">Dietas: ${(receta.recipe.dietLabels.length > 0) ? (receta.recipe.dietLabels) : ('No hay información ')}</p>\r\n                                    <p class=\"datos-receta\">${(receta.recipe.mealType) ? (receta.recipe.mealType) : ('No hay información')}</p>\r\n                                </div>`\r\n    });\r\n    resultadosBusqueda.innerHTML = resultadosDibujados;\r\n}","//Importamos las funciones que se necesitan para que funcione la aplicación\r\nimport { conexionAPI } from './http-provider';\r\nimport { renderizarHTML } from './renderizar-html';\r\n\r\n//Elementos del DOM\r\nconst input = document.getElementById('input');\r\nconst paginacionHTML = document.getElementById('paginacion');\r\nconst pagina = document.getElementById('pagina');\r\n\r\n//Variables para la lógica\r\nlet numeroPaginas;\r\nconst elementosPorPagina = 10;\r\n\r\n\r\n\r\n\r\nexport const paginacion = async (paginaActual) => {\r\n    if (paginaActual < 1 || paginaActual > numeroPaginas) {\r\n        return;\r\n    }\r\n    let from = (paginaActual * elementosPorPagina) - elementosPorPagina;\r\n    let to = from + elementosPorPagina;\r\n    const datosApi = await conexionAPI(input.value, from, to);\r\n    numeroPaginas = Math.ceil(datosApi.count / elementosPorPagina);\r\n    // La API solo deja mostrar 10 páginas de resultados.\r\n    (numeroPaginas > 10) ? (numeroPaginas = 10) : numeroPaginas;\r\n    renderizarHTML(datosApi.hits);\r\n    paginacionHTML.classList.remove('hidden');\r\n    pagina.innerHTML = `Página: ${paginaActual} de ${numeroPaginas}`;\r\n\r\n    return numeroPaginas;\r\n}","//Importamos el css desde la carpeta donde se encuentra\r\nimport './css/style.css';\r\n\r\n//Importamos las funciones que se necesitan para que funcione la aplicación\r\nimport { paginacion } from './js/paginacion';\r\n\r\n//Elementos del DOM\r\nconst form = document.querySelector('form');\r\nconst btnPrev = document.getElementById('btn-prev');\r\nconst btnNext = document.getElementById('btn-next');\r\nconst btnInicio = document.getElementById('btn-inicio');\r\nconst btnFin = document.getElementById('btn-fin');\r\n\r\n//Variables para la paginación\r\nlet paginaActual = 1;\r\nlet totalPaginas;\r\n\r\n\r\n//--------------------- EVENTOS ---------------------\r\nform.addEventListener('submit', async (evento) => {\r\n    evento.preventDefault();\r\n    totalPaginas = await paginacion(paginaActual);\r\n});\r\nbtnNext.addEventListener('click', () => {\r\n    //Deshabilitamos el botón para que el usuario no haga click más de una vez\r\n    btnNext.disabled = true;\r\n    //Cuando avanzamos página queremos sumar una página más a paginaActual\r\n    paginaActual++;\r\n    paginacion(paginaActual);\r\n    btnNext.disabled = false;\r\n\r\n});\r\nbtnPrev.addEventListener('click', () => {\r\n    //Deshabilitamos el botón para que el usuario no haga click más de una vez\r\n    btnPrev.disabled = true;\r\n    //Cuando retrocedemos una página queremos restar una página a paginaActual\r\n    paginaActual--;\r\n    paginacion(paginaActual);\r\n    btnPrev.disabled = false;\r\n});\r\nbtnInicio.addEventListener('click', () => {\r\n    btnInicio.disabled = true;\r\n    paginaActual = 1;\r\n    paginacion(paginaActual);\r\n    btnInicio.disabled = false;\r\n});\r\nbtnFin.addEventListener('click', () => {\r\n    btnFin.disabled = true;\r\n    paginaActual = totalPaginas;\r\n    paginacion(paginaActual);\r\n    btnFin.disabled = false;\r\n});\r\n"],"sourceRoot":""}